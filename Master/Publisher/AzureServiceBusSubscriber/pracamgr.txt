% !TeX spellcheck = en_GB
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                        %
%     Master thesis LaTeX template       %
%  compliant with the SZJK regulations   %
%                                        %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                        %
%  (c) Krzysztof Simiński, 2018-2023     %
%                                        %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                        %
% The latest version of the templates is %
% available at                           %
% github.com/ksiminski/polsl-aei-theses  %
%                                        %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
%%
% This LaTeX project formats the final thesis
% with compliance to the SZJK regulations.
% Please to not change formatting (fonts, margins,
% bolds, italics, etc).
%
% You can compile the project in several ways.
%
% 1. pdfLaTeX compilation
%
% pdflatex main
% bibtex   main
% pdflatex main
% pdflatex main
%
%
% 2. XeLaTeX compilation
%
% Compilation with the XeLaTeX engine inserts Calibri font
% in the title page. Of course the font has to be installed.
%

% xelatex main
% bibtex  main
% xelatex main
% xelatex main
%
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% If you have any questions, remarks, just send me an email: %
%            krzysztof.siminski(at)polsl.pl               %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% We would like to improve the LaTeX templates
% of final theses. By answering the questions
% in the survey whose address your can find below
% you help us to do so. The survey is completely
% anonimous. Thank you!
%
% https://docs.google.com/forms/d/e/1FAIpQLScyllVxNKzKFHfILDfdbwC-jvT8YL0RSTFs-s27UGw9CKn-fQ/viewform?usp=sf_link
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                             %
% CUSTOMISATION OF THE THESIS                 %
%                                             %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Please customise your thesis with the macros below.

% TODO
%% author:
\newcommand{\FirstNameAuthor}{Klaudia}
\newcommand{\SurnameAuthor}{Janecka}
\newcommand{\IdAuthor}{$\langle$student id$\rangle$}  % (remove $\langle$ and $\rangle)

% coauthor:
%\newcommand{\FirstNameCoauthor}{First Names}  % If there is a coauthor, put the first names here.
%\newcommand{\SurnameCoauthor}{Surname}        % If there is a coauthor, put the surnames here.
%\newcommand{\IdCoauthor}{$\langle$student id$\rangle$} % If there is a coauthor, put the student id here (remove $\langle$ and $\rangle)
% If there is no coathor, leave the definitions empty like below. If a coauthor exists, comment the lines below.
\newcommand{\FirstNameCoauthor}{} % If there is only one author, leave the definitions empty.
\newcommand{\SurnameCoauthor}{}   % If there is only one author, leave the definitions empty.
\newcommand{\IdCoauthor}{}        % If there is only one author, leave the definitions empty.
%%%%%%%%%%

\newcommand{\Supervisor}{$\langle$title first name surname$\rangle$}  % supervisor (remove $\langle$ and $\rangle)
\newcommand{\Title}{Design and implementation of a microservice-oriented web application that collects data from external services.}
\newcommand{\TitleAlt}{Thesis title in Polish}
\newcommand{\Program}{Informatyka}
\newcommand{\Specialisation}{Informatics}
\newcommand{\Id}{$\langle$your student id$\rangle$}                   % remove \langle and \rangle in final version
\newcommand{\Departament}{$\langle$departament name$\rangle$}         % remove \langle and \rangle in final version
\newcommand{\Surname}{Doe}
\newcommand{\Firstnames}{John}

% If you have a consultant for your thesis, put their name below ...
%\newcommand{\Consultant}{$\langle$title first name surname$\rangle$}  %  (remove $\langle$ and $\rangle)
% ... else leave the braces empty:
\newcommand{\Consultant}{} % no consultant

% end of thesis customisation
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                             %
% END OF CUSTOMISATION                        %
%                                             %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                             %
%   PLEASE DO NOT MODIFY THE SETTINGS BELOW!  %
%                                             %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



\documentclass[a4paper,twoside,12pt]{book}
\usepackage[utf8]{inputenc}                                      
\usepackage[T1]{fontenc}  
\usepackage{amsmath,amsfonts,amssymb,amsthm}
\usepackage[polish,british]{babel} 
\usepackage{indentfirst}
\usepackage{xurl}
\usepackage{xstring}
\usepackage{ifthen}



\usepackage{ifxetex}

\ifxetex
	\usepackage{fontspec}
	\defaultfontfeatures{Mapping=tex—text} % to support TeX conventions like ``——-''
	\usepackage{xunicode} % Unicode support for LaTeX character names (accents, European chars, etc)
	\usepackage{xltxtra} % Extra customizations for XeLaTeX
\else
	\usepackage{lmodern}
\fi



\usepackage[margin=2.5cm]{geometry}
\usepackage{graphicx} 
\usepackage{hyperref}
\usepackage{booktabs}
\usepackage{tikz}
\usepackage{pgfplots}
\usepackage{mathtools}
\usepackage{geometry}
\usepackage{subcaption}   % subfigures
\usepackage[page]{appendix} % toc,




\usepackage{csquotes}
\usepackage[natbib=true,backend=bibtex,maxbibnames=99]{biblatex}  % compilation of bibliography with BibTeX
%\usepackage[natbib=true,backend=biber,maxbibnames=99]{biblatex}  % compilation of bibliography with Biber
\bibliography{biblio}

\usepackage{ifmtarg}   % empty commands  

\usepackage{setspace}
\onehalfspacing


\frenchspacing



%%%% TODO LIST GENERATOR %%%%%%%%%

\usepackage{color}
\definecolor{brickred}      {cmyk}{0   , 0.89, 0.94, 0.28}

\makeatletter \newcommand \kslistofremarks{\section*{Remarks} \@starttoc{rks}}
  \newcommand\l@uwagas[2]
    {\par\noindent \textbf{#2:} %\parbox{10cm}
{#1}\par} \makeatother


\newcommand{\ksremark}[1]{%
{%\marginpar{\textdbend}
{\color{brickred}{[#1]}}}%
\addcontentsline{rks}{uwagas}{\protect{#1}}%
}










%%%%%%%%%%%%%% END OF TODO LIST GENERATOR %%%%%%%%%%%  

\newcommand{\printCoauthor}{%		
    \StrLen{\FirstNameCoauthor}[\FNCoALen]
    \ifthenelse{\FNCoALen > 0}%
    {%
		{\large\bfseries\Coauthor\par}
	
		{\normalsize\bfseries \LeftId: \IdCoauthor\par}
    }%
    {}
} 

%%%%%%%%%%%%%%%%%%%%%
\newcommand{\autor}{%		
    \StrLen{\FirstNameCoauthor}[\FNCoALenXX]
    \ifthenelse{\FNCoALenXX > 0}%
    {\FirstNameAuthor\ \SurnameAuthor, \FirstNameCoauthor\ \SurnameCoauthor}%
	{\FirstNameAuthor\ \SurnameAuthor}%
}
%%%%%%%%%%%%%%%%%%%%%

\StrLen{\FirstNameCoauthor}[\FNCoALen]
\ifthenelse{\FNCoALen > 0}%
{%
\author{\FirstNameAuthor\ \SurnameAuthor, \FirstNameCoauthor\ \SurnameCoauthor}
}%
{%
\author{\FirstNameAuthor\ \SurnameAuthor}
}%

%%%%%%%%%%%% FANCY HEADERS %%%%%%%%%%%%%%%
% no capitalisation of headers
\usepackage{fancyhdr}
\pagestyle{fancy}
\fancyhf{}
\fancyhead[LO]{\nouppercase{\it\rightmark}}
\fancyhead[RE]{\nouppercase{\it\leftmark}}
\fancyhead[LE,RO]{\it\thepage}

\setlength{\headheight}{14.49998pt}
\addtolength{\topmargin}{-2.49998pt}

\fancypagestyle{onlyPageNumbers}{%
   \fancyhf{} 
   \fancyhead[LE,RO]{\it\thepage}
}

\fancypagestyle{noNumbers}{%
   \fancyhf{} 
   \fancyhead[LE,RO]{}
}


\fancypagestyle{PageNumbersChapterTitles}{%
   \fancyhf{} 
   \fancyhead[LO]{\nouppercase{\Firstnames\ \Surname}}
   \fancyhead[RE]{\nouppercase{\leftmark}} 
   \fancyfoot[CE, CO]{\thepage}
}
 


%%%%%%%%%%%%%%%%%%%%%%%%%%%








\newcounter{pagesWithoutNumbers}

%%%%%%%%%%%%%%%%%%%%%%%%%%% 
\newcommand{\printOpiekun}[1]{%		

    \StrLen{\Consultant}[\mystringlen]
    \ifthenelse{\mystringlen > 0}%
    {%
       {\large{\bfseries CONSULTANT}\par}
       
       {\large{\bfseries \Consultant}\par}
    }%
    {}
} 
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 
% Please do not modify the lines below!
\newcommand{\Author}{\FirstNameAuthor\ \MakeUppercase{\SurnameAuthor}} 
\newcommand{\Coauthor}{\FirstNameCoauthor\ \MakeUppercase{\SurnameCoauthor}}
\newcommand{\Type}{MASTER THESIS}
\newcommand{\Faculty}{Faculty of Automatic Control, Electronics and Computer Science}
\newcommand{\Polsl}{Silesian University of Technology}
\newcommand{\Logo}{politechnika_sl_logo_bw_pion_en.pdf}
\newcommand{\LeftId}{Student identification number}
\newcommand{\LeftProgram}{Programme}
\newcommand{\LeftSpecialisation}{Specialisation}
\newcommand{\LeftSUPERVISOR}{SUPERVISOR}
\newcommand{\LeftDEPARTMENT}{DEPARTMENT}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                             %
% END OF SETTINGS                             %
%                                             %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%




%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                             %
% MY PACKAGES, SETTINGS ETC.                  %
%                                             %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% Put your packages, macros, setting here.


 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% listings
% packages: listings or minted
% % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % 

% package listings
\usepackage{listings}
\lstset{%
morekeywords={var,get,set},% add the keyword you need
language=[Sharp]C,% C, Matlab, Python, SQL, TeX, XML, bash, ... – vide https://www.ctan.org/pkg/listings
commentstyle=\textit,%
identifierstyle=\textsf,%
keywordstyle=\sffamily\bfseries, %\texttt, %
%captionpos=b,%
tabsize=3,%
frame=lines,%
numbers=left,%
numberstyle=\tiny,%
numbersep=5pt,%
breaklines=true,%
escapeinside={@*}{*@},%
}

% % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % % 
% package minted
% \usepackage{minted}

% This package requires a special command line option in compilation
% pdflatex -shell-escape main.tex
% xelatex  -shell-escape main.tex

%\usepackage[chapter]{minted} % [section]
%%\usemintedstyle{bw}   % black and white codes
%
%\setminted % https://ctan.org/pkg/minted
%{
%%fontsize=\normalsize,%\footnotesize,
%%captionpos=b,%
%tabsize=3,%
%frame=lines,%
%framesep=2mm,
%numbers=left,%
%numbersep=5pt,%
%breaklines=true,%
%escapeinside=@@,%
%}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                             %
% END OF MY PACKAGES, SETTINGS ETC.           %
%                                             %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


\begin{document}
%\kslistofremarks

\frontmatter

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                             %
%    PLEASE DO NOT MODIFY THE TITLE PAGE!     %
%                                             %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%  TITLE PAGE %%%%%%%%%%%%%%%%%%%
\pagestyle{empty}
{
	\newgeometry{top=1.5cm,%
	             bottom=2.5cm,%
	             left=3cm,
	             right=2.5cm}
 
	\ifxetex 
	  \begingroup
	  \setsansfont{Calibri}
	   
	\fi 
	 \sffamily
	\begin{center}
	\includegraphics[width=50mm]{\Logo}
	 
	
	{\Large\bfseries\Type\par}
	
	\vfill  \vfill  
			 
	{\large\Title\par}
	
	\vfill  
		
	{\large\bfseries\Author\par}
	
	{\normalsize\bfseries \LeftId: \IdAuthor}

	\printCoauthor
	
	\vfill  		
 
	{\large{\bfseries \LeftProgram:} \Program\par} 
	
	{\large{\bfseries \LeftSpecialisation:} \Specialisation\par} 
	 		
	\vfill  \vfill 	\vfill 	\vfill 	\vfill 	\vfill 	\vfill  
	 
	{\large{\bfseries \LeftSUPERVISOR}\par}
	
	{\large{\bfseries \Supervisor}\par}
				
	{\large{\bfseries \LeftDEPARTMENT\ \Departament} \par}
		
	{\large{\bfseries \Faculty}\par}
		
	\vfill  \vfill  

    	
    \printOpiekun{\Consultant}
    
	\vfill  \vfill  
		
    {\large\bfseries  Gliwice \the\year}

   \end{center}	
       \ifxetex 
       	  \endgroup
       \fi
	\restoregeometry
}
  


\cleardoublepage

\rmfamily\normalfont
\pagestyle{empty}


%%% Let's start the thesis %%%%

% TODO
\subsubsection*{Thesis title}  
\Title

\subsubsection*{Abstract} 
(Thesis abstract – to be copied into an appropriate field during an electronic submission – in English.)
The investigations covered in this papers are related to the Microservices architecture. The main aim is to investigate the communication aspects within microservices architecture and their impact on the system performance, scalability and it's overall efficiency.
The knowledge about the inter-services communication is crucial to build robust distributed systems. 
The study delves into various communication patterns and technologies commonly used in the microservices architecture, providing insights about its limitations, advantages and impact on the whole system behaviour. 
 
\subsubsection*{Key words}  
Event-Driven Pattern, Microservices, Azure Cloud, Communication, Gazebo, Architecture

\subsubsection*{Tytuł pracy}
\begin{otherlanguage}{polish}
\TitleAlt
\end{otherlanguage}

\subsubsection*{Streszczenie} 
\begin{otherlanguage}{polish}
(Streszczenie pracy – odpowiednie pole w systemie APD powinno zawierać kopię tego streszczenia.)
\end{otherlanguage}

\subsubsection*{Słowa kluczowe} 
\begin{otherlanguage}{polish}
Event-Driven Pattern, Microservices, Azure Cloud, Communication, Gazebo, Architecture
\end{otherlanguage}




%%%%%%%%%%%%%%%%%% Table of contents %%%%%%%%%%%%%%%%%%%%%%
% Add \thispagestyle{empty} to the toc file (main.toc), because \pagestyle{empty} doesn't work if the TOC has multiple pages
\addtocontents{toc}{\protect\thispagestyle{empty}}
\tableofcontents

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\setcounter{pagesWithoutNumbers}{\value{page}}
\mainmatter
\pagestyle{empty}

\cleardoublepage

\pagestyle{PageNumbersChapterTitles}

%%%%%%%%%%%%%% body of the thesis %%%%%%%%%%%%%%%%%

% TODO
\chapter{Introduction}
The following chapter will cover the introduction to the problem domain. It will define the scope of work, present a brief description of the developed system, and outline the conducted research.
\section{Introduction to the problem domain}
Nowadays, IT solutions commonly are the core of maintenance and organization of many products and companies. The system for any enterprise with notable size is often very complex and composed of few independent solutions. The growth of a system commonly relates to the new system functionalities, connection to resources provided by new business partners or new technological solutions, such as cloud services, which have recently been a trend in software development. Due to the connection between them, such as infrastructure is called "Spaghetti architecture" [figure 1.1] , which illustrated the inefficient, lack of order and hard to manage side of IT solution.

 \begin{figure}
\centering
  \includegraphics[width=0.5\textwidth]{spaghetti.jpg}
\caption{Spaghetti architecture diagram}
\label{fig1}
\end{figure}

Referring to this problem, many architectural patterns have been created over the years.
Microservices are approach of software architecture which addresses many modern application challenges.  Microservices offers several advantages including scalability and flexibility in managing complex applications. The most important point of designing a microservices architecture is a good selection of technology and method of communication between individual subsystems. The choice of the pattern is complicated, because it requires cross-sectional knowledge of a wide range of technologies available on the market. The technology should meets the requirements of the individual system and be optimal in relation to the costs.

\section{Contribution and objective of the thesis}
The main purpose of the thesis is to provide the solution of choosing a proper type of communication in process of creating the complex distributed system in microservices architecture.  \\
The goals of the thesis are as follows: 
\begin{itemize}
\item Study existing communication technologies, 
\item Identify the challenges of collaboration between microservices,
\item Perform and experiment using choose types of communication and various data packages,
\item Recognise the configuration properties required to establish best performance communication between microservices using selected technology,
\item Study the best usability of given technology depending on the demand of the system;
\end{itemize}
For the purpose of conducting research for a master's thesis, a system based on the microservices architecture was developed, along with the creation of datasets. \\
The system is composed of multiple applications. It creates the space to perform experiments with multiple communication patterns. There is one publisher application which resends the data to multiple separate client application. Each application stands for the representation of each communication pattern.\\
Datasets were designed in various forms to perform experiments for a few different purposes of communication between subsystems. 
Over the study, metrics are collected at multiple stages, starting from the serialization of data into an appropriate format for a given type of communication, to the reception of data and its subsequent deserialization into an object.\\
The study ends with a simulation that emulated the real-word scenario of data transmission. 
The data is send to the Gazebo simulates environment, impacting the situation of data transmission to the robot in the Gazebo simulation environment, triggering the robot’s motion.  It becomes possible to gain insides about how the type of communication impacts the trajectory and efficiently of the robot motion. 
The findings of this study have the potential to contribute to the development of more efficient and optimized communication strategies within microservices-based applications.

\section{Overview of the literature}
The research methodology of this thesis was to conduct a comprehensive literature
review. The terms microservice, microservices, micro service, micro services, micro-service, and micro-services
were searched in articles published in journals, conferences, books, and workshops. The research was restricted to articles published between
2015 and 2023. The information about the communication types were collected from various sources such as official documents, scientific thesis, blogs and video conferences. The collaboration between microservices is currently under the constant development and researches. New technology solutions such as cloud enables to increase the performance and efficiency of the communication. 
After the completion of literature review, it was confirmed that this topic is very common  nowadays problem and there is a lot of uncertainty about choosing the right connection type and its configuration when designing web applications. Most of blogs provides only brief comparison between two choose technologies. However this kinds of researches were also very helpful because it allows to analyse a specific use case. 

[Jak bede analizować głębiej to pewnie coś jeszcze dopisze]
  
\section{Delimitations}
Tutaj dopisze co mogłoby być jeszcze przetersowane, co nie udało mi się przetestować 
\section{Short summary of chapters}

TODO IN THE LATE STATE
Co poruszam w kazdym z chapterow


\chapter{Overview of terminology and technology evolution}


This chapter would covered the brief description of a software architectures and patterns strictly related with the problem domain. There would be also covered the comparison of base architectures in relation to the microservices.
This chapter provides an comprehensive analysis of the evolution of Microservices architecture. It presents the its origins,  delving into the core motivation aspects which leads to its creation. In this chapter would be examined the history context, the industrial software needs and the technology grown that shaped the emergence of creation of Microservices architecture as a prominent model in software engineering for complex systems.  


\section{Architecture patterns}
\subsection{Monolith}

To analyse the Microservices it is good to mention about the Monolith architecture, which is traditional model of software program. Monolith is build as a single unit, all code is deployed as an single unit. It is self-contained and independent from other applications. It can be consisted of a single module or multiple modules inside single process. 
Under one monolith application could be working multiple developers teams, which are working on different segments of application. 
The disadvantage of monolith is the difficulty of making changes.Due to this there could occurs multiple problems with blocking each other by waiting on changement of the same peace of code.  Any change, even a small one, involves updating the entire stack and deploying the updated version, which is very time consuming when the system is big. 

The communication between modules in the Monolith architecture is performed using local method invocation. The intermodule communication could be problematic solution. This pattern is direct and synchronous, so if the called module does not respond or is not available within the system , the caller module will be impacted. The system could be blocked for the indefinite time or wait till the system return the time out error occurs,leading to a delayed response or reporting of system issues. [IMAGE - THE DIAGRAM WITH error]. 
It issue becomes particularly significant for example when system is responsible for generates and manages data. If the function responsible for data analysis encounters parsing error, the system of generating data would stop.
This underscores the critical importance of establishing a robust error handling mechanism and ensuring that all business logic relies on a system capable of perfect handling errors and appropriately responding to failures.

However monolith has also some advantages:
\begin{itemize}

\item 
All code located in one place, it is easier to debug,
\item 
One executable file is easier to deploy than multiple,
\item 
End to end testing can be performed faster than in the distributed systems:
\end{itemize}

\begin{figure}[h]
\centering
  \includegraphics[width=0.5\textwidth]{test.png}
\caption{Monolith diagram}
\label{fig1}
\end{figure}
 
\subsection{Service-oriented architecture}
The heavyweight nature of monolith architecture was slowly decomposed into modules. This process led to the formation of a new architecture known as service-oriented architecture (SOA). 

Modules are communicating using the Enterprise Service Bus. Software-Oriented architecture manages and coordinates the services it delivers through this layer. 
For the whole system Enterprise Service Bus is single point of failure and if there occur any damage or delay (overwhelmed), the entire system could be affected.
Modules perform various type of operations and transactions. There is no strict division into separates role for the particular module. The whole system is using single dedicated database engine. Application is created of four different types of services: 
\begin{description}
\item \textbf{Functional services}\\
The services which are responsible for the businesses operations for the application. It encapsulated the businesses logic and provide functionality that can be accessed by other components within the system. 
\item \textbf{Enterprise services}\\
The services which implements the functionality required by the system. It integrates multiple functional services to deliver end-to-end functionality. The service which performs coordination of various business processes across different systems or applications, could be given as an example of enterprise service. 
\item \textbf{Application services}\\
The services which are responsible for development and deployment. Provides the set of tools such as development frameworks, application deployment platforms, and runtime environments which could be used to perform build, deployment and manage the application within environment. 
\item \textbf{Infrastructure services}\\
The services which are related to the underlying technical infrastructure of a system. This services could be responsible for the authentication, security  or data management. It could also handle the communication protocols.  	

The Service-oriented architecture is a precursor of Microservices architecture. However this architectures should not be comparable. There are few significant differences between them. 
The Service-oriented architecture differs in scope. In Service-oriented architecture modules are shared and reused enterprise-wide. For example the scope of the application may include the entire department in the company or support for a specific subsystem, which could be consisted of full user authorization and the business logic (e.g. administrator module for user management). 

\end{description}
\begin{figure}[!]
\centering
  \includegraphics[width=0.5\textwidth]{test.png}
\caption{Service-oriented architecture diagram}
\label{fig1}
\end{figure}
 
\subsection{Microservices}
Service-oriented architecture was a precursor of microservices, laying the foundations for the development of ideas related to the modularization of services and applications. Microservices, although inspired by SOA architecture, have extended the concept of modularity. Microservices not only separate applications in order to optimize the amount of functions and data, but also segregate operations in terms of business logic basing on the Domain Driven Design. 
Each microservice has single responsibility for the system and has separate database engine.
Microservices are discussed deeper in next chapers. 
 \begin{figure}[h]
\centering
  \includegraphics[width=0.5\textwidth]{test.png}
\caption{Microservices diagram}
\label{fig1}
\end{figure}
\subsubsection{Domain driven Design}
Domain driven Design is a approach to the software development which concentrates on modelling software architecture to match a domain. The structure of application including the name convention of a classes, method and variables, should match the business domain.


\chapter{Microservices}
The term 'Microservice' defining the small application which has single responsibility to the whole system. It has only one reason to change or to be replaced.

Adrian Cockcroft, famous technologist and strategist, defines a microservices architecture as a service-oriented architecture consisting of loosely coupled components that operate within well-defined boundaries.Loosely coupled means that services can be updated independently, without requiring changes to other services. If you have a collection of small, specialised services that still need to be updated simultaneously, they cannot be considered microservices. There is lack of loose coupling principle between them.

The idea of the microservices is related to the demand of scaling along different axes independently which is more efficient at delivering software into production, or on other form of continuous delivery. This is a big trend in modern software architecture, that is why it is is extremely important to study it in perspective of communication and data flow.

\section{Evolution of software architecture}

The history of microservices can be traced back to the 1990s, when the first ideas and concepts of distributed software architecture emerged. However, the term 'microservices' has only become popular in the last decade, and their development has been linked to advances in technology and changes in approaches to application development.

Early work on microservices focused on finding better ways to create service-based software. One important step was the introduction of Service-Oriented Architecture (SOA) as an approach to creating modular and loosely coupled services.
Service-Oriented Architecture has made it possible to create applications consisting of independent components that can be easily scaled and developed.

In 2011, the term 'microservices' (Microservices) emerged, which was introduced by Martin Fowler and James Lewis in their article 'Microservices: a definition of this new architectural term'.
 
\subsection{Netflix as a microservices pioneer}
Netflix has played an important role in developing and promoting microservices architecture. Netflix was one of the pioneers in using microservices as the main approach to building its streaming platform.

Netflix has started out as a small rental company. They offered an on-line DVD subscriptions through the Internet. Movies were mailed to the customers in the form of DVD's with prepaid return envelopes. 
Nowadays Netflix is huge streaming platform which content is produced in-house ( Netflix Originals) or produced by other companies and Netflix has distribution right to.

With the huge shift in product delivery from postal services to on-line services, Netflix needed more and more resources on the Internet and powerful software, because its due to the increase of the demand, its infrastructure couldn't keep up. 
The company made the decision to move its IT infrastructure from private data centres to a public cloud and replace its monolithic architecture with a microservices architecture. However, at that time, the term "microservices" was not widely known, and the structure itself was not well-established.

Netflix emerged as one of the first prominent companies to successfully transition from a monolith to a cloud-based microservices architecture. This achievement was recognized in 2015 when it received the JAX Special Jury award. Today, Netflix manages and supports various parts of its platform through over a thousand microservices.

\section{Characteristics}
The James Lewis and Martin Fowler in their  
\href{https://martinfowler.com/articles/microservices.html}{article} have wrote down the set of characteristics related with Microservices Architecture. They wrote that there is no universal characteristic for the microservices architecture but they have described the common ones. 

\begin{description}

\item Componentization via Services
\
\end{description}

\section{Benefits and Challenges of Microservices}


\section{Cloud and contenerization}
In this section, first are located brief descriptions of concepts, used in the section subject. 
\subsection{Containers}
\subsection{Continuous delivery}
Continuous Delivery is software concept that enables the demand deployment of a software to any native environment. It enables the delivery of software life circle to be automated.  It
leverages techniques like Continuous Integration and Continuous Deployment. 
\subsection{•}

Cloud computing is growing paradigm which has big impact on the microsevices implementation.
The usage of containers in the cloud makes Microservices development and deployment more agile. 

In the security aspect, using the same host kernel for different containers makes it more possible for attackers to gain unauthorized access to containers.
//TODO

\begin{itemize}
\item
implementacje w rzeczywistych projektach - problemy ktore sa napotykane ( przyklad z amazone podczas black friday - wsluchaj sie w podstast) i jak inni juz probowali rozwiazac ten problem
\end{itemize} 

\chapter{Communication}
This chapter will focus on analysis of problem related to the performed experiments. The conducted research is aimed at demonstrating the effectiveness of a given technology in general terms and the functioning of the entire system.

\section { The role of communication between microservices in the overall perception of a system}
The communication between particular subsystems play significant role in functionality of entier system. 
The communication is used for following aims: 
\begin{description}
\item \textbf{Checks system coherence }\\
Maintening the distributed system could be challenging because each subsystem can wrote in different time, by different developers and using different technologies.. The subsystems exchanges informations and validates data again predefined rules, to ensure that each services operates within the specified constrains. The validation process checks the consistency of a data and cross-services dependencies which guarantees that the system coherence of a system. 
\item \textbf{Database translations integrity  }\\
Maintaining the data consistency can be also changer to the distributed system. 
From the definition of microservices, each microservice should have separate instance of database. Even if each of the system, performs different operation, it could operate on the same set of data. In this situation if the data is modified by one system, the modifying system should notify other systems to update them databases about the changement which was conducted. 
\item \textbf{Collaboration and task synchronization}\\
Referring to the genesis of microservices architecture, the system is consisted of particular services where each subsystem is responsible for single functionality. The whole system collaborates to fulfil the business processes that span across different domains. 
Communication between them enables the possibility to work together seamlessly to deliver complex business functionalities. Very often there is need to exchange data to perform respective tasks. 
Communication between microservices plays a significant role in facilitating task synchronization by enabling the exchange of control signals, status updates, and coordination messages among the participating services.
Microservices can share status of updates and progress information during the task execution, enabling other services to take appropriate action  basing on the status. It enables to have real-time transparency, allowing better monitoring and decision-making. 

\item \textbf{Fault tolerance}\\
Communication between microservices plays a significant role in achieving effective fault tolerance and robust exception handling mechanisms.
Microservices are commonly deployed independently and errors could occur only in separate subsystem. There is various reasons which causes the errors such as the service unavailability because of cloud provider and network disruptions. Microservices can attempt to execute failed operation again providing a change for the success. It can implement the backoff mechanism, it can manage the time intervals between retries reducing the time of load of the system and allowing to recovery of unavailable system.   
Additionally, communication enables microservices to implement circuit breakers, which can detect and prevent further calls to a failing service, avoiding cascading failures and improving system stability. This isolation enhances the resilience and stability of the microservices architecture.

\item \textbf{Exception Handling}\\
Exception handling is a crucial aspects of any software system. It  coordinates the exception handling across multiple microservices. 
The communication role in the exception handling in the distributed architecture is propagation the exception information to other relevant services to share the awareness of the error.When an exception occurs in one microservice, it may have implications for related or dependent services
It ensures that the exception was properly handled and prevents from being ignored or lost. 

Communication also enables the properly gain the logs and insides from the exception ( for example by sending it to the proper service which is responsible for collection the logs). It helps to centralize logging system and monitoring tools. This can result in fast system administrator and developers reaction, to repair the system failure. 


\item \textbf{Scalability}\\
Scalability is main requirement to create modern, efficient software system. Communication between microservices play a crucial role in achieving scalable architecture. 

Communication enables the horizontal scaling by sharing the information by subsystems about their availability and capacity allowing the system to dynamically adapt and distribute the processes efficiently. System can handle higher volumes of requests. 	
Communication supports the concept of elasticity in microservices, which refers to ability of system to automatically scale up and down, basing on the demand. 
By communication system can monitor the resources usage ( such as network bandwidth, CPU and memory usage) and dynamically adjust their capacity. The dynamic scaling helps the efficient utilization of available resources and optimize resources allocation. It helps prevent bottlenecks. 

\item \textbf{Security}\\

Security is crucial element in all the software systems. Communication plays a significant role in securing systems in microservices architecture.  Communication in microservices exposes them to the risk that send message could be intercepted and be able for thrives to infer the business logic operations. Microservices are commonly deployed in in many distributed containers so the data  so it is a potential threat to steal data from one of them. 
However the communication process can be under various security mechanisms.

Implementing the security on communication system can prevent the exposing the malicious process when one of subsystems is attacked.
Gegick and Barnum 73 proposed that only the minimum necessary rights should be assigned to a
subject that requests access to a resource and should be in effect for the shortest duration necessary ( reference to :" A survey on security issues in services communication of
Microservices-enabled fog applications"). 

Communication enforces the secure of communication protocols using a network-level security . Microservices can communicate over the secure channels which uses the encryption protocols ( for example: Transport Layer Security (TLS) and Secure Sockets Layer (SSL)).
The encryption makes the communication secure the 	sensitive data from eavesdropping, tampering, or interception. 

To protect data during the communication, there could be implemented the data encryption,  that utilizes shared key and public
key encryption. The data can be encrypted by for example Advanced Encryption Standard (AES) as hared key encryption and RSA encryption algorithm as public key encryption scheme.

 
There is possibility to implement the Authorization and Authentication  through the communication. Microservices can exchange authentication tokens or credentials to verify the identity of the communicating subsystems. 
Thanks to the authorization process, there can be implemented additional role management. Role-based access control (RBAC) or attribute-based access control (ABAC) can limits the right to perform specific action only for selected system users. 
\end{description}

\section{Communication Forms}
\subsection{Synchronous}
Synchronous communication refers to a communication pattern where services interact by exchanging messages and waiting for a timely response before proceeding further. In this approach, a service initiates a request to another service and waits for the response, blocking its execution until a reply is received. The examples of synchronous communication protocols are:
HTTP
TCP
WebSockets
Sockets
RPC
SOAP

\subsection{Asynchronous}
The most common communication approach. Asynchronous communication refers to a communication pattern where services interact without requiring immediate and direct response. In this approach, a service sends a message or request to another service and continues its execution without waiting for a response. The receiving service processes the message independently and may respond at a later time or not at all. 
\section {Available technologies}
The communication is 
 Currently on the market is available huge diversity of different technologies responsible for the connection of multiple subsystems. However even the role of each technology is the same, the usage in particular systems can differ significantly. 


\section{Patterns}
In microservices architecture there is few available communication patterns.
The system architect is responsible for analysing the advantages and disadvantages of each pattern. This evaluation process is crucial in order to make an informed decision and choose the most suitable communication pattern for the specific scenario of the system. By carefully considering the pros and cons of each pattern, the architect can ensure effective and efficient communication between the services in the system. Ultimately, the chosen communication pattern will play a significant role in determining the overall performance and functionality of the application.


[TODO OPISSSSS]

%\begin{itemize}
%\item What problem do I want (have to :-) to solve?
%\item Why the problem is important?
%\item How do others solve the problem?
%\item What are pros and cons of my solution?



%\chapter{[Problem analysis]}
%
%\begin{itemize}
%\item problem analysis, problem statement
%\item state of the art, literature research (all sources in the thesis have to be referenced, eg journal article \cite{bib:article} book \cite{bib:book}, conference paper \cite{bib:conference}, internet source \cite{bib:internet})
%\item description of known solutions, algorithms
%\item location of the thesis in scientific domain
%\item The title of this chapter is similar to the title of the thesis.
%\end{itemize}


% TODO

\chapter{[Chapter title]}

tekst

\section{[Section title]}

\section{[Subsection title]}

Each figure in the document should be referred to at least once (fig. \ref{fig:2}).

\begin{figure}
\centering
\begin{tikzpicture}
\begin{axis}[
    y tick label style={
        /pgf/number format/.cd,
            fixed,   % po zakomentowaniu os rzednych jest indeksowana wykladniczo
            fixed zerofill, % 1.0 zamiast 1
            precision=1,
        /tikz/.cd
    },
    x tick label style={
        /pgf/number format/.cd,
            fixed,
            fixed zerofill,
            precision=2,
        /tikz/.cd
    }
]
\addplot [domain=0.0:0.1] {rnd};
\end{axis} 
\end{tikzpicture}
\caption{Figure caption.} % Figure caption is BELOW the figure!
\label{fig:2}
\end{figure}


%%%%%%%%%%%%%%%%%%%%%
% FIGURE FROM FILE
%
%\begin{figure}
%\centering
%\includegraphics[width=0.5\textwidth]{./politechnika_sl_logo_bw_pion_en.pdf}
%\caption{Caption of a figure is always below the figure.}
%\label{fig:label}
%\end{figure}
%Fig. \ref{fig:label} presents …
%%%%%%%%%%%%%%%%%%%%%
%
%%%%%%%%%%%%%%%%%%%%
%% SUBFIGURES
%
%\begin{figure}
%\centering
%\begin{subfigure}{0.4\textwidth}
%    \includegraphics[width=\textwidth]{./politechnika_sl_logo_bw_pion_en.pdf}
%    \caption{Upper left figure.}
%    \label{fig:upper-left}
%\end{subfigure}
%\hfill
%\begin{subfigure}{0.4\textwidth}
%    \includegraphics[width=\textwidth]{./politechnika_sl_logo_bw_pion_en.pdf}
%    \caption{Upper right figure.}
%    \label{fig:upper-right}
%\end{subfigure}
%
%\begin{subfigure}{0.4\textwidth}
%    \includegraphics[width=\textwidth]{./politechnika_sl_logo_bw_pion_en.pdf}
%    \caption{Lower left figure.}
%    \label{fig:lower-left}
%\end{subfigure}
%\hfill
%\begin{subfigure}{0.4\textwidth}
%    \includegraphics[width=\textwidth]{./politechnika_sl_logo_bw_pion_en.pdf}
%    \caption{Lower right figure.}
%    \label{fig:lower-right}
%\end{subfigure}
%        
%\caption{Common caption for all subfigures.}
%\label{fig:subfigures}
%\end{figure}
%Fig. \ref{fig:subfigures} presents very important information, eg. Fig. \ref{fig:upper-right} is an upper right subfigure.
%%%%%%%%%%%%%%%%%%%%%


Each table in the document should be referred to at least once (Tab. \ref{tab:results}).

\begin{table}
\centering
\caption{A caption of a table is ABOVE it.}
\label{tab:results}
\begin{tabular}{rrrrrrrr}
\toprule
	         &                                     \multicolumn{7}{c}{method}                                      \\
	         \cmidrule{2-8}
	         &         &         &        \multicolumn{3}{c}{alg. 3}        & \multicolumn{2}{c}{alg. 4, $\gamma = 2$} \\
	         \cmidrule(r){4-6}\cmidrule(r){7-8}
	$\zeta$ &     alg. 1 &   alg. 2 & $\alpha= 1.5$ & $\alpha= 2$ & $\alpha= 3$ &   $\beta = 0.1$  &   $\beta = -0.1$ \\
\midrule
	       0 &  8.3250 & 1.45305 &       7.5791 &    14.8517 &    20.0028 & 1.16396 &                       1.1365 \\
	       5 &  0.6111 & 2.27126 &       6.9952 &    13.8560 &    18.6064 & 1.18659 &                       1.1630 \\
	      10 & 11.6126 & 2.69218 &       6.2520 &    12.5202 &    16.8278 & 1.23180 &                       1.2045 \\
	      15 &  0.5665 & 2.95046 &       5.7753 &    11.4588 &    15.4837 & 1.25131 &                       1.2614 \\
	      20 & 15.8728 & 3.07225 &       5.3071 &    10.3935 &    13.8738 & 1.25307 &                       1.2217 \\
	      25 &  0.9791 & 3.19034 &       5.4575 &     9.9533 &    13.0721 & 1.27104 &                       1.2640 \\
	      30 &  2.0228 & 3.27474 &       5.7461 &     9.7164 &    12.2637 & 1.33404 &                       1.3209 \\
	      35 & 13.4210 & 3.36086 &       6.6735 &    10.0442 &    12.0270 & 1.35385 &                       1.3059 \\
	      40 & 13.2226 & 3.36420 &       7.7248 &    10.4495 &    12.0379 & 1.34919 &                       1.2768 \\
	      45 & 12.8445 & 3.47436 &       8.5539 &    10.8552 &    12.2773 & 1.42303 &                       1.4362 \\
	      50 & 12.9245 & 3.58228 &       9.2702 &    11.2183 &    12.3990 & 1.40922 &                       1.3724 \\
\bottomrule
\end{tabular}
\end{table}  


%\chapter{[Subject of the thesis]}
%
%\begin{itemize}
%\item solution to the problem proposed by the author of the thesis
%\item theoretical analysis of proposed solutions
%\item rationale of applied methods, algorithms, and tools
%\end{itemize}


% TODO
\chapter{Experiments}
%
%This chapter presents the experiments. It is a crucial part of the thesis and has to dominate in the thesis. 
%The experiments and their analysis should be done in the way commonly accepted in the scientific community (eg. benchmark datasets, cross validation of elaborated results, reproducibility and replicability of tests etc).
%
%
%\section{Methodology}
%
%\begin{itemize}
%\item description of methodology of experiments
%\item description of experimental framework (description of user interface of research applications – move to an appendix)
%\end{itemize}
%
%
%\section{Data sets}
%
%\begin{itemize}
%\item description of data sets
%\end{itemize}
%
%
%\section{Results}
%
%\begin{itemize}
%\item presentation of results, analysis and wide discussion of elaborated results, conclusions
%\end{itemize}
%
%
%
%\begin{table}
%\centering
%\caption{A caption of a table is ABOVE it.}
%\label{id:tab:wyniki}
%\begin{tabular}{rrrrrrrr}
%\toprule
%	         &                                     \multicolumn{7}{c}{method}                                      \\
%	         \cmidrule{2-8}
%	         &         &         &        \multicolumn{3}{c}{alg. 3}        & \multicolumn{2}{c}{alg. 4, $\gamma = 2$} \\
%	         \cmidrule(r){4-6}\cmidrule(r){7-8}
%	$\zeta$ &     alg. 1 &   alg. 2 & $\alpha= 1.5$ & $\alpha= 2$ & $\alpha= 3$ &   $\beta = 0.1$  &   $\beta = -0.1$ \\
%\midrule
%	       0 &  8.3250 & 1.45305 &       7.5791 &    14.8517 &    20.0028 & 1.16396 &                       1.1365 \\
%	       5 &  0.6111 & 2.27126 &       6.9952 &    13.8560 &    18.6064 & 1.18659 &                       1.1630 \\
%	      10 & 11.6126 & 2.69218 &       6.2520 &    12.5202 &    16.8278 & 1.23180 &                       1.2045 \\
%	      15 &  0.5665 & 2.95046 &       5.7753 &    11.4588 &    15.4837 & 1.25131 &                       1.2614 \\
%	      20 & 15.8728 & 3.07225 &       5.3071 &    10.3935 &    13.8738 & 1.25307 &                       1.2217 \\
%	      25 &  0.9791 & 3.19034 &       5.4575 &     9.9533 &    13.0721 & 1.27104 &                       1.2640 \\
%	      30 &  2.0228 & 3.27474 &       5.7461 &     9.7164 &    12.2637 & 1.33404 &                       1.3209 \\
%	      35 & 13.4210 & 3.36086 &       6.6735 &    10.0442 &    12.0270 & 1.35385 &                       1.3059 \\
%	      40 & 13.2226 & 3.36420 &       7.7248 &    10.4495 &    12.0379 & 1.34919 &                       1.2768 \\
%	      45 & 12.8445 & 3.47436 &       8.5539 &    10.8552 &    12.2773 & 1.42303 &                       1.4362 \\
%	      50 & 12.9245 & 3.58228 &       9.2702 &    11.2183 &    12.3990 & 1.40922 &                       1.3724 \\
%\bottomrule
%\end{tabular}
%\end{table}  

%%%%%%%%%%%%%%%%%%%%%
% FIGURE FROM FILE
%
%\begin{figure}
%\centering
%\includegraphics[width=0.5\textwidth]{./politechnika_sl_logo_bw_pion_en.pdf}
%\caption{Caption of a figure is always below the figure.}
%\label{fig:label}
%\end{figure}
%Fig. \ref{fig:label} presents …
%%%%%%%%%%%%%%%%%%%%%
%
%%%%%%%%%%%%%%%%%%%%
%% SUBFIGURES
%
%\begin{figure}
%\centering
%\begin{subfigure}{0.4\textwidth}
%    \includegraphics[width=\textwidth]{./politechnika_sl_logo_bw_pion_en.pdf}
%    \caption{Upper left figure.}
%    \label{fig:upper-left}
%\end{subfigure}
%\hfill
%\begin{subfigure}{0.4\textwidth}
%    \includegraphics[width=\textwidth]{./politechnika_sl_logo_bw_pion_en.pdf}
%    \caption{Upper right figure.}
%    \label{fig:upper-right}
%\end{subfigure}
%
%\begin{subfigure}{0.4\textwidth}
%    \includegraphics[width=\textwidth]{./politechnika_sl_logo_bw_pion_en.pdf}
%    \caption{Lower left figure.}
%    \label{fig:lower-left}
%\end{subfigure}
%\hfill
%\begin{subfigure}{0.4\textwidth}
%    \includegraphics[width=\textwidth]{./politechnika_sl_logo_bw_pion_en.pdf}
%    \caption{Lower right figure.}
%    \label{fig:lower-right}
%\end{subfigure}
%        
%\caption{Common caption for all subfigures.}
%\label{fig:subfigures}
%\end{figure}
%Fig. \ref{fig:subfigures} presents very important information, eg. Fig. \ref{fig:upper-right} is an upper right subfigure.
%%%%%%%%%%%%%%%%%%%%%


%
%\begin{figure}
%\centering
%\begin{tikzpicture}
%\begin{axis}[
%    y tick label style={
%        /pgf/number format/.cd,
%            fixed,   % po zakomentowaniu os rzednych jest indeksowana wykladniczo
%            fixed zerofill, % 1.0 zamiast 1
%            precision=1,
%        /tikz/.cd
%    },
%    x tick label style={
%        /pgf/number format/.cd,
%            fixed,
%            fixed zerofill,
%            precision=2,
%        /tikz/.cd
%    }
%]
%\addplot [domain=0.0:0.1] {rnd};
%\end{axis} 
%\end{tikzpicture}
%\caption{Figure caption is BELOW the figure.}
%\label{fig:2}
%\end{figure}
%
%\begin{figure}
%\begin{lstlisting}
%if (_nClusters < 1)
%	throw std::string ("unknown number of clusters");
%if (_nIterations < 1 and _epsilon < 0)
%	throw std::string ("You should set a maximal number of iteration or minimal difference -- epsilon.");
%if (_nIterations > 0 and _epsilon > 0)
%	throw std::string ("Both number of iterations and minimal epsilon set -- you should set either number of iterations or minimal epsilon.");
%\end{lstlisting}
%\caption{Example of pseudocode.}
%\end{figure}

% TODO
\chapter{Summary}

%\begin{itemize}
%\item What problem have I solved?
%\item How have I solved the problem?
%\item What are pros and cons of my solutions?
%\item Can I state some recommendations?
%\end{itemize}

\begin{itemize}
\item synthetic description of performed work
\item conclusions
\item  future development, potential future research
\item Has the objective been reached?
\end{itemize}



\backmatter

%\bibliographystyle{plain}  % bibtex
%\bibliography{biblio} % bibtex
\printbibliography           % biblatex
\addcontentsline{toc}{chapter}{Bibliography}

\begin{appendices}
% TODO
\chapter{Technical documentation}


% TODO
\chapter{List of abbreviations and symbols}

\begin{itemize}
\item[DNA] deoxyribonucleic acid
\item[MVC] model--view--controller 
\item[$N$] cardinality of data set
\item[$\mu$] membership function of a fuzzy set
\item[$\mathbb{E}$] set of edges of a graph
\item[$\mathcal{L}$] Laplace transformation
\end{itemize}

% TODO
\chapter{List of additional files in~electronic submission (if applicable)}

Additional files uploaded to the system include:
\begin{itemize}
\item source code of the application,
\item test data,
\item a video file showing how software or hardware developed for thesis is used,
\item etc.
\end{itemize}


% TODO
\chapter{Biblography}
https://dzone.com/articles/adopting-microservices-netflix

Microservices, IoT,
and Azure



\listoffigures
\addcontentsline{toc}{chapter}{List of figures}
\listoftables
\addcontentsline{toc}{chapter}{List of tables}

\end{appendices}

\end{document}


%% Finis coronat opus.



%% Finis coronat opus.

